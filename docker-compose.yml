version: '3.8'
services:
  vault:
    image: hashicorp/vault:1.16.1
    container_name: vault-server
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
      VAULT_DEV_ROOT_TOKEN_ID: root
    cap_add:
      - IPC_LOCK
    volumes:
      - vault_data:/vault/data
      - vault_config:/vault/config
    command: vault server -dev
    healthcheck:
      test: ["CMD", "vault", "status", "-address=http://127.0.0.1:8200"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:7.0.12-alpine
    container_name: redis-server
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  spring-app:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    container_name: spring-app
    ports:
      - "8080:8080"
    environment:
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: root
      SPRING_CLOUD_VAULT_HOST: vault
      SPRING_CLOUD_VAULT_PORT: 8200
      SPRING_CLOUD_VAULT_SCHEME: http
      SPRING_CLOUD_VAULT_KV_DEFAULT_CONTEXT: redis-config
      SPRING_CLOUD_VAULT_KV_APPLICATION_NAME: production
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_PASSWORD: ""
    depends_on:
      - vault
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  vault_data:
  vault_config:
  redis_data: